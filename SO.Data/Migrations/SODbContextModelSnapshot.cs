// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SO.Data;

namespace SO.Data.Migrations
{
    [DbContext(typeof(SODbContext))]
    partial class SODbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("SO.Data.Entities.Bet", b =>
                {
                    b.Property<int>("Id");

                    b.Property<bool>("IsLive");

                    b.Property<int>("MatchId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("SO.Data.Entities.Event", b =>
                {
                    b.Property<int>("Id");

                    b.Property<bool>("IsLive");

                    b.Property<string>("Name");

                    b.Property<int>("SportId");

                    b.HasKey("Id");

                    b.HasIndex("SportId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SO.Data.Entities.Match", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("EventId");

                    b.Property<string>("MatchType");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("SO.Data.Entities.Odd", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("BetId");

                    b.Property<string>("Name");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("BetId");

                    b.ToTable("Odds");
                });

            modelBuilder.Entity("SO.Data.Entities.Sport", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("SO.Data.Entities.Bet", b =>
                {
                    b.HasOne("SO.Data.Entities.Match", "Match")
                        .WithMany("Bets")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SO.Data.Entities.Event", b =>
                {
                    b.HasOne("SO.Data.Entities.Sport", "Sport")
                        .WithMany("Events")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SO.Data.Entities.Match", b =>
                {
                    b.HasOne("SO.Data.Entities.Event", "Event")
                        .WithMany("Matches")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SO.Data.Entities.Odd", b =>
                {
                    b.HasOne("SO.Data.Entities.Bet", "Bet")
                        .WithMany("Odds")
                        .HasForeignKey("BetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
